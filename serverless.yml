---
service: jackalambda

frameworkVersion: "^1.58.0"

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  region: ${env:AWS_DEFAULT_REGION, 'eu-west-1'}
  stage: ${opt:stage, env:SERVERLESS_STAGE, 'staging'}
  logRetentionInDays: 30
  environment:
    NODE_ENV: production
  iamRoleStatements:
    - Effect: Allow
      Action:
        - 'ssm:GetParameter'
      Resource:
        - 'Fn::Join':
          - ':'
          - - 'arn:aws:ssm'
            - Ref: 'AWS::Region'
            - Ref: 'AWS::AccountId'
            - 'parameter${self:custom.ssmPrefix}/*'
    - Effect: 'Allow'
      Action:
        - 'lambda:InvokeFunction'
      Resource:
        - { Ref: 'TailLambdaFunction' }

custom:
  app: jackalope
  name: jackalambda
  owner: meltwater
  ssmPrefix: /${self:custom.owner}/${self:custom.app}/${self:provider.stage}/${self:custom.name}

package:
  individually: true
  exclude:
    - .drone/**
    - .editorconfig
    - .eslintrc.json
    - .npmrc
    - .nvmrc
    - .nyc_output/**
    - .nycrc.json
    - .prettierrc.json
    - .yarn-cache/**
    - .yarnrc
    - CHANGELOG.md
    - README.md
    - ava.config.js
    - aws_credentials
    - aws_role_session_name
    - coverage/**
    - examples/**
    - fixtures/**
    - makenew.sh
    - node_modules/.bin/**
    - nodemon.json
    - serverless.yml
    - snapshots/**
    - tmp/**
    - yarn.lock

functions:
  todo:
    handler: handlers/index.todo
    events:
      - http:
          method: get
          path: /todo
  head:
    handler: handlers/head/handle.invoke.handler
    environment:
      SSM_TAIL_LAMBDA_ARN: ${self:custom.ssmPrefix}/tail_lambda_arn
  tail:
    handler: handlers/tail/handle.invoke.handler

resources:
  Resources:
    TailLambdaSsmParameter:
      Type: AWS::SSM::Parameter
      Properties:
        Name: ${self:custom.ssmPrefix}/tail_lambda_arn
        Type: String
        Value: { Ref: 'TailLambdaFunction' }
